apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "hdfs-k8s.namenode.fullname" . }}
  labels:
    app: {{ template "hdfs-k8s.namenode.name" . }}
    chart: {{ template "hdfs-k8s.subchart" . }}
    release: {{ .Release.Name }}
spec:
  serviceName: {{ template "hdfs-k8s.namenode.fullname" . }}
  # Create a size-1 set.
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "hdfs-k8s.namenode.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "hdfs-k8s.namenode.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      # Use hostNetwork so datanodes connect to namenode without going through an overlay network
      # like weave. Otherwise, namenode fails to see physical IP address of datanodes.
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: hdfs-namenode
          image: crs4/namenode:{{ .Values.global.hadoopVersion }}-ubuntu
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HADOOP_CUSTOM_CONF_DIR
              value: /etc/hadoop-custom-conf
          ports:
          - containerPort: {{ .Values.global.nameNodePort }}
            name: fs
          volumeMounts:
          {{- if .Values.persistence.hostPath }}  
            - name: hdfs-name
              mountPath: /hadoop/dfs/name
          {{- else }}
            - name: metadatadir
              mountPath: /hadoop/dfs/name
              subPath: name
          {{- end }}    
            - name: hdfs-config
              mountPath: /etc/hadoop-custom-conf
              readOnly: true
      restartPolicy: Always
      volumes:
        {{- if .Values.persistence.hostPath }}            
        - name: hdfs-name        
          hostPath:
            path: {{ .Values.persistence.hostPath }}        
        {{- end }}
        - name: hdfs-config
          configMap:
            name: {{ template "hdfs-k8s.config.fullname" . }}
  {{- if not .Values.persistence.hostPath }}
  volumeClaimTemplates:
    - metadata:
        name: metadatadir
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
      {{- end }}
      {{- if .Values.persistence.selector }}
        selector:
{{ toYaml .Values.persistence.selector | indent 10 }}
      {{- end }}
  {{- end }}
